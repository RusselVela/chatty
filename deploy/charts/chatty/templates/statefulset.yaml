apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "service.name" . }}
  labels:
    app: {{ template "service.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    type: microservice
spec:
  serviceName: {{ template "service.name" . }}
  selector:
    matchLabels:
      app: {{ template "service.name" . }}
      type: microservice
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: {{ template "service.name" . }}
        type: microservice
      annotations:
        ad.datadoghq.com/{{ template "service.name" . }}.logs: |
          [{
            "service": "{{ template "service.name" . }}",
            "log_processing_rules": [
                {
                  "type": "mask_sequences",
                  "name": "mask_api_key",
                  "replace_placeholder": "**************",
                  "pattern" : "(t|T)ppl-(a|A)pi-(k|K)ey(:|=)\\[?\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}\\]?"
                },{
                  "type": "mask_sequences",
                  "name": "mask_api_key_in_path",
                  "replace_placeholder": "apikeys/**************",
                  "pattern" : "apikeys\\/\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}"
                },{
                  "type": "exclude_at_match",
                  "name": "exclude_debug",
                  "pattern" : "\"level\":\"DEBUG\""
                }
              ]
          }]
        ad.datadoghq.com/{{ template "service.name" . }}.check_names: |
          ["openmetrics"]
        ad.datadoghq.com/{{ template "service.name" . }}.init_configs: |
          [{}]
        ad.datadoghq.com/{{ template "service.name" . }}.instances: |
          [
            {
              "prometheus_url": "http://%%host%%:{{ .Values.service.systemPort }}/prometheus",
              "namespace": "{{ .Release.Namespace }}",
              "metrics": ["*"]
            }
          ]
    spec:
      serviceAccountName: {{ template "service.name" . }}
      containers:
        - name: {{ template "service.name" . }}
          image: '{{ .Values.image.registry }}/chatty:{{ .Values.image.tag | default .Values.image.refs.chatty_service }}'
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.systemPort }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          volumeMounts:
            - name: {{ template "service.name" . }}-config-volume
              mountPath: /config
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      volumes:
        - name: {{ template "service.name" . }}-config-volume
          configMap:
            name: {{ template "service.name" . }}
